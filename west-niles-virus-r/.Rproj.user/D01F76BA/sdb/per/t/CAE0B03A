{
    "contents" : "source(\"data.build.gbc.R\")\n#############################################################\n# save csv to disk data\n#############################################################\nrm(list = ls())\nsource(\"fn.base.R\")\n\nfn.register.wk(1)\ntmp <- foreach(\n  k=0:data.cv.folds$K,\n  .combine=rbind) %dopar% {\n  \n  source(\"fn.base.R\")\n  data.fold <- fn.create.data.fold(\"gbc_01\", k)\n  data.fold$writedir <- fn.py.file(data.fold$basename)\n  dir.create(data.fold$writedir, showWarnings = F, recursive = T)\n  \n  data.all.cur <- merge(data.all.out[, list(Id, WnvPresent)], \n                        data.all.feat.tree, by=\"Id\")\n  data.all.cur <- merge(data.all.cur, \n                        data.all.trap[, list(Id, Species)], \n                        by=\"Id\", suffixes = c(\"Tree\", \"\"))\n  data.all.cur <- data.all.cur[order(Id)]\n  \n  col.out <- \"WnvPresent\"\n  cols.weather <- c('TmaxSt1', 'TminSt1', \n                    'TavgSt1', 'DepartSt1', 'DewPointSt1', 'HeatSt1', 'CoolSt1', \n                    'PrecipTotalSt1', 'SnowFallSt1', \n                    'ResultDirSt1', 'TmaxSt2',  'TminSt2', 'TavgSt2', \n                    'DewPointSt2', 'PrecipTotalSt2', 'ResultDirSt2')\n  \n  cols.weather <- c(\n    cols.weather\n  )\n  cols.weather <- c(paste0(cols.weather, \"Smth02\"))\n\n  cols.in <- c('SpeciesTree', 'Block', 'Trap', 'Latitude', 'Longitude', \n               'AddressAccuracy', 'Month', 'TrapCount', 'TrapCountPrevAge', \n               'TrapCountPrev', 'SunriseSt1', 'SunsetSt1', \"Year\",\n               cols.weather)\n\n  cols.in <- intersect(cols.in, colnames(data.all.cur))\n  cols.write <- c(col.out, cols.in)\n    \n  data.fold$tr.idx <- which(fn.cv.which(data.all.cur, data.cv.folds, k, \"tr\"))\n  data.fold$tr.idx.in <- \n    fn.filter.ix.species.in(data.fold$tr.idx, data.all.cur)\n\n  data.fold$tr.file <- paste0(data.fold$writedir, \"/\", data.fold$name,\"_tr.csv\")\n  write.csv(\n    data.all.cur[data.fold$tr.idx.in][, cols.write, with=F],\n    file=data.fold$tr.file, row.names = F\n  )\n\n  \n  data.fold$test.idx <- which(fn.cv.which(\n    data.all.cur, data.cv.folds, k, \"test\"))\n  data.fold$test.idx.in <- \n    fn.filter.ix.species.in(data.fold$test.idx, data.all.cur)\n  data.fold$test.idx.out <- \n    fn.filter.ix.species.out(data.fold$test.idx, data.all.cur)\n  \n  data.fold$test.ids.in <- data.all.cur[data.fold$test.idx.in, Id]\n  data.fold$test.ids.out <- data.all.cur[data.fold$test.idx.out, Id]\n  data.fold$test.file <- paste0(data.fold$writedir, \"/\", \n                                data.fold$name,\"_test.csv\")\n  data.fold$test.pred.file <- paste0(data.fold$writedir, \"/\", \n                                     data.fold$name,\"_test_pred.csv\")\n  write.csv(\n    data.all.cur[data.fold$test.idx.in, cols.write, with=F],\n    file=data.fold$test.file, row.names = F\n  )\n  \n  fn.save.data.fold(data.fold)\n  \n  NULL\n  \n}\nfn.kill.wk()\n\n#############################################################\n# train using scikit-learn\n#############################################################\nrm(list = ls())\nsource(\"fn.base.R\")\n\nfn.register.wk()\ndata.gbc.01.pred.tmp <- foreach(\n  k=0:data.cv.folds$K, \n  .combine=rbind) %dopar% {\n  \n  source(\"fn.base.R\")\n  \n  fn.load.data.fold(\"gbc_01\", k)\n    \n  fn.init.worker(data.fold$logname)\n    \n  for (ix in 1) {\n    fit.args <- paste(\"'{\\\"n_estimators\\\": 1000, \\\"learning_rate\\\": 0.0035, \",\n                      \"\\\"loss\\\": \\\"deviance\\\", \",\n                      \"\\\"max_features\\\": 8, \\\"max_depth\\\": 7, \",\n                      \"\\\"random_state\\\": 788942, \",\n                      \"\\\"subsample\\\": 1, \\\"verbose\\\": 50}'\")\n\n    fit.more <- \"\" \n    if (ix > 1) fit.more <- \"-load_model\"\n    \n    system(\n      paste(\n        \"cd ../west-niles-virus-py && python -u sci_learn_train.py\",\n        fit.more,\n        \"-train_data_file\", data.fold$tr.file,\n        \"-test_data_file\", data.fold$test.file,\n        \"-test_pred_file\", data.fold$test.pred.file,\n        \"-test_metric auc\",\n        \"-skip_mapping\",\n        \"-target_col WnvPresent\",\n        \"-model_type GradientBoostingClassifier\",\n        \"-model_file \", paste0(data.fold$tr.file, \".pkl\"),\n        \"-fit_args \", fit.args,\n        \" >> \", paste0(\"../data/log/\", data.fold$logname, \".log\"), \" 2>&1\"\n      )\n    )\n  }\n  \n  data.fold$test.pred <- rbind(\n    data.table(\n      Id = data.fold$test.ids.in,\n      Pred = fread(data.fold$test.pred.file)$pred\n    ),\n    data.table(\n      Id = data.fold$test.ids.out,\n      Pred = 0.0\n    )\n  )\n    \n  fn.print.err(data.fold$test.pred)\n\n  fn.clean.worker()\n  \n  data.fold$test.pred\n\n}\nfn.kill.wk()\n\nStore(data.gbc.01.pred.tmp)\n\ndata.gbc.01.pred <- data.gbc.01.pred.tmp[order(Id)]\n\n#############################################################\n# Saving data\n#############################################################\n# rm(list = ls())\nsource(\"fn.base.R\")\n\nfn.print.err(fn.apply.mult(data.gbc.01.pred))\n#    Size      AUC\n# 1 10506 0.8119684 \n\nprint(fn.calc.pred.mean(data.gbc.01.pred))\n#    Year      Mean\n# 1: 2007 0.5640557\n# 2: 2009 0.5957073\n# 3: 2011 1.0000000\n# 4: 2013 0.3845166\n# 5: 2008 0.5835099\n# 6: 2010 0.4542783\n# 7: 2012 0.5790881\n# 8: 2014 1.0000000\n\nStore(data.gbc.01.pred)\n\ndata.gbc.01.pred.smth <- fn.smooth.pred(data.gbc.01.pred)\nfn.print.err(data.gbc.01.pred.smth)\n#    Size       AUC\n# 1 10506 0.8215739\n\nStore(data.gbc.01.pred.smth) # 0.81513\n",
    "created" : 1434922517505.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2276645336",
    "id" : "CAE0B03A",
    "lastKnownWriteTime" : 1434915265,
    "path" : "~/Dropbox/WestNile2015/final_code/west-niles-virus-r/01 - train.gbc.01.R",
    "project_path" : "01 - train.gbc.01.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}