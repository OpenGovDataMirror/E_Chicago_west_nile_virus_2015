library(data.table)
library(Metrics)
library(geosphere)
data.folder <- "../data/input/"
train.file <- "train.csv"
test.file <- "test.csv"
spray.file <- "spray.csv"
weather.file <- "weather.csv"
weather.station1 <- c(-87.933, 41.995)
weather.station2 <- c(-87.752, 41.786)
source("load.raw.data.R")
source("train.rgf.01.R")
source("train.rgf.01.R")
colnames(data.all)
source("01 - train.gbc.01.R")
install.packages("SOAR")
source("01 - train.gbc.01.R")
source("data.build.gbc.R")
rm(list = ls())
source("fn.base.R")
fn.register.wk(1)
tmp <- foreach(
k=0:data.cv.folds$K,
.combine=rbind) %dopar% {
source("fn.base.R")
data.fold <- fn.create.data.fold("gbc_01", k)
data.fold$writedir <- fn.py.file(data.fold$basename)
dir.create(data.fold$writedir, showWarnings = F, recursive = T)
data.all.cur <- merge(data.all.out[, list(Id, WnvPresent)],
data.all.feat.tree, by="Id")
data.all.cur <- merge(data.all.cur,
data.all.trap[, list(Id, Species)],
by="Id", suffixes = c("Tree", ""))
data.all.cur <- data.all.cur[order(Id)]
col.out <- "WnvPresent"
cols.weather <- c('TmaxSt1', 'TminSt1',
'TavgSt1', 'DepartSt1', 'DewPointSt1', 'HeatSt1', 'CoolSt1',
'PrecipTotalSt1', 'SnowFallSt1',
'ResultDirSt1', 'TmaxSt2',  'TminSt2', 'TavgSt2',
'DewPointSt2', 'PrecipTotalSt2', 'ResultDirSt2')
cols.weather <- c(
cols.weather
)
cols.weather <- c(paste0(cols.weather, "Smth02"))
cols.in <- c('SpeciesTree', 'Block', 'Trap', 'Latitude', 'Longitude',
'AddressAccuracy', 'Month', 'TrapCount', 'TrapCountPrevAge',
'TrapCountPrev', 'SunriseSt1', 'SunsetSt1', "Year",
cols.weather)
cols.in <- intersect(cols.in, colnames(data.all.cur))
cols.write <- c(col.out, cols.in)
data.fold$tr.idx <- which(fn.cv.which(data.all.cur, data.cv.folds, k, "tr"))
data.fold$tr.idx.in <-
fn.filter.ix.species.in(data.fold$tr.idx, data.all.cur)
data.fold$tr.file <- paste0(data.fold$writedir, "/", data.fold$name,"_tr.csv")
write.csv(
data.all.cur[data.fold$tr.idx.in][, cols.write, with=F],
file=data.fold$tr.file, row.names = F
)
data.fold$test.idx <- which(fn.cv.which(
data.all.cur, data.cv.folds, k, "test"))
data.fold$test.idx.in <-
fn.filter.ix.species.in(data.fold$test.idx, data.all.cur)
data.fold$test.idx.out <-
fn.filter.ix.species.out(data.fold$test.idx, data.all.cur)
data.fold$test.ids.in <- data.all.cur[data.fold$test.idx.in, Id]
data.fold$test.ids.out <- data.all.cur[data.fold$test.idx.out, Id]
data.fold$test.file <- paste0(data.fold$writedir, "/",
data.fold$name,"_test.csv")
data.fold$test.pred.file <- paste0(data.fold$writedir, "/",
data.fold$name,"_test_pred.csv")
write.csv(
data.all.cur[data.fold$test.idx.in, cols.write, with=F],
file=data.fold$test.file, row.names = F
)
fn.save.data.fold(data.fold)
NULL
}
fn.kill.wk()
rm(list = ls())
source("fn.base.R")
fn.register.wk()
data.gbc.01.pred.tmp <- foreach(
k=0:data.cv.folds$K,
.combine=rbind) %dopar% {
source("fn.base.R")
fn.load.data.fold("gbc_01", k)
fn.init.worker(data.fold$logname)
for (ix in 1) {
fit.args <- paste("'{\"n_estimators\": 1000, \"learning_rate\": 0.0035, ",
"\"loss\": \"deviance\", ",
"\"max_features\": 8, \"max_depth\": 7, ",
"\"random_state\": 788942, ",
"\"subsample\": 1, \"verbose\": 50}'")
fit.more <- ""
if (ix > 1) fit.more <- "-load_model"
system(
paste(
"cd ../west-niles-virus-py && python -u sci_learn_train.py",
fit.more,
"-train_data_file", data.fold$tr.file,
"-test_data_file", data.fold$test.file,
"-test_pred_file", data.fold$test.pred.file,
"-test_metric auc",
"-skip_mapping",
"-target_col WnvPresent",
"-model_type GradientBoostingClassifier",
"-model_file ", paste0(data.fold$tr.file, ".pkl"),
"-fit_args ", fit.args,
" >> ", paste0("../data/log/", data.fold$logname, ".log"), " 2>&1"
)
)
}
data.fold$test.pred <- rbind(
data.table(
Id = data.fold$test.ids.in,
Pred = fread(data.fold$test.pred.file)$pred
),
data.table(
Id = data.fold$test.ids.out,
Pred = 0.0
)
)
fn.print.err(data.fold$test.pred)
fn.clean.worker()
data.fold$test.pred
}
fn.kill.wk()
k <- 0
source("fn.base.R")
fn.load.data.fold("gbc_01", k)
ix <- 1
fit.args <- paste("'{\"n_estimators\": 1000, \"learning_rate\": 0.0035, ",
"\"loss\": \"deviance\", ",
"\"max_features\": 8, \"max_depth\": 7, ",
"\"random_state\": 788942, ",
"\"subsample\": 1, \"verbose\": 50}'")
fit.more <- ""
system(
paste(
"cd ../west-niles-virus-py && python -u sci_learn_train.py",
fit.more,
"-train_data_file", data.fold$tr.file,
"-test_data_file", data.fold$test.file,
"-test_pred_file", data.fold$test.pred.file,
"-test_metric auc",
"-skip_mapping",
"-target_col WnvPresent",
"-model_type GradientBoostingClassifier",
"-model_file ", paste0(data.fold$tr.file, ".pkl"),
"-fit_args ", fit.args,
" >> ", paste0("../data/log/", data.fold$logname, ".log"), " 2>&1"
)
)
data.fold$test.pred <- rbind(
data.table(
Id = data.fold$test.ids.in,
Pred = fread(data.fold$test.pred.file)$pred
),
data.table(
Id = data.fold$test.ids.out,
Pred = 0.0
)
)
data.fold$test.pred.file
data.fold$test.pred.file
data.fold$writedir
data.fold$name
data.fold$basename
path.wd
getwd()
system(
paste(
"cd ../west-niles-virus-py && python -u sci_learn_train.py",
fit.more,
"-train_data_file", data.fold$tr.file,
"-test_data_file", data.fold$test.file,
"-test_pred_file", data.fold$test.pred.file,
"-test_metric auc",
"-skip_mapping",
"-target_col WnvPresent",
"-model_type GradientBoostingClassifier",
"-model_file ", paste0(data.fold$tr.file, ".pkl"),
"-fit_args ", fit.args,
" >> ", paste0("../data/log/", data.fold$logname, ".log"), " 2>&1"
)
)
source("01 - train.gbc.01.R")
source("01 - train.gbc.01.R")
source("data.build.rgf.R")
col.species
source("02 - train.rgf.01.R")
source("02 - train.rgf.01.R")
source("02 - train.rgf.01.R")
source("03 - train.ens.R")
rgf.dtry
gbc.01
data.ens.all.pred
source("03 - train.ens.R")
